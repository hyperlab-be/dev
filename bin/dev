#!/usr/bin/env bash

export DEV_USER=${DEV_USER:-$UID}
export DEV_GROUP=${DEV_GROUP:-$(id -g)}

if [ $# -gt 0 ]; then

    # dev build {?SERVICE}
    if [ "$1" == "build" ]; then
        docker compose build "${@:2}"

    # dev start {?SERVICE}
    elif [ "$1" == "start" ]; then
        docker compose up -d "${@:2}"

    # dev rebuild {?SERVICE}
    elif [ "$1" == "rebuild" ]; then
        docker compose up -d --build "${@:2}"

    # dev restart {?SERVICE}
    elif [ "$1" == "restart" ]; then
        docker compose restart "${@:2}"

    # dev stop {?SERVICE}
    elif [ "$1" == "stop" ]; then
        docker compose down "${@:2}"

    # dev logs {SERVICE}
    elif [ "$1" == "logs" ]; then
        docker compose logs "${@:2}"

    # dev shell {SERVICE}
    elif [ "$1" == "shell" ]; then
       docker compose exec -u dev "$2" bash

    # dev {SERVICE} {COMMAND}
    else
        docker compose exec -u dev "$1" "${@:2}"

    fi
    
else
    echo "Commands:" >&2
    echo
    echo "  build                  Build the environment"
    echo "  build {service}        Build the service"
    echo "  start                  Start the environment"
    echo "  start {service}        Start the service"
    echo "  rebuild                Rebuild the environment"
    echo "  rebuild {service}      Rebuild the service"
    echo "  restart                Restart the environment"
    echo "  restart {service}      Restart the service"
    echo "  stop                   Stop the environment"
    echo "  stop {service}         Stop the service"
    echo "  logs {service}         Print the logs of the service"
    echo "  shell {service}        Open an interactive shell into the service"
    echo "  {service} {command}    Run an arbitrary command against the service"
    echo
    exit 1

fi